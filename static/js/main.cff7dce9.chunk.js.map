{"version":3,"sources":["components/Text/style.js","components/Text/Text.js","components/Spinner/Spinner.js","components/CheckBox/style.js","components/CheckBox/CheckBox.js","components/CheckBox/checkboxes.js","redux/actions/nationsActions.js","redux/actions/favoritesActions.js","redux/actions/pageNumberActions.js","components/UserList/style.js","components/UserList/UserList.js","pages/Home/style.js","pages/Home/Home.js","hooks/usePeopleFetch.js","components/FavoritesList/style.js","components/FavoritesList/FavoritesList.js","pages/Favorites/style.js","pages/Favorites/Favorites.js","theme/ThemeProvider.js","components/NavBar/NavBar.js","redux/reducers/nationsReducer.js","redux/reducers/favoritesReducers.js","redux/reducers/pageNumberReducer.js","AppRouter.js","index.js"],"names":["Text","styled","div","size","bold","children","Typography","Spinner","color","thickness","variant","CircularProgress","CheckBox","isChecked","onChange","label","value","handleChange","checked","FormControlLabel","control","Checkbox","event","currentTarget","checkboxes","ADD_NATION","REMOVE_NATION","REMOVE_FAVORITE_USER","GET_FROM_LOCAL_STORAGE","SAVE_FAVORITE_USER","CONSTANT_LOCAL_STORAGE_NAME","INCREASE_PAGE_NUM","RESET_PAGES","UserList","List","User","UserInfo","UserPicture","img","SpinnerWrapper","IconButtonWrapper","isVisible","Filters","users","isLoading","dispatch","useDispatch","useState","hoveredUserId","setHoveredUserId","handleMouseLeave","nations","useSelector","state","favoritesUsers","handleCheckBoxChange","checkBoxValue","type","payload","useEffect","favoritesLocalStorage","JSON","parse","localStorage","getItem","forEach","_","userRef","useRef","lastUserRef","useCallback","node","current","disconnect","IntersectionObserver","entries","isIntersecting","observe","map","checkbox","includes","user","index","ref","length","onMouseEnter","handleMouseEnter","onMouseLeave","onClick","handleClickOnUser","src","picture","large","alt","name","title","first","last","email","location","street","number","city","country","IconButton","Home","Content","Header","setUsers","setIsLoading","pageNum","fetchUsers","a","axios","get","params","results","page","nat","join","response","data","usePeopleFetch","FavoritesList","usersToDisplay","setUsersToDisplay","handleUserClick","Favorite","Favorites","ThemeProvider","overrides","MuiTab","root","backgroundColor","theme","React","useMemo","createMuiTheme","palette","primary","main","error","CssBaseline","NavBar","history","useHistory","routes","setValue","pathname","push","AppBar","position","style","top","Tabs","_e","newValue","aria-label","indicatorColor","textColor","Tab","nationsReducer","action","newNations","filter","item","favoritesReducers","newUsers","concat","setItem","stringify","favUser","pageNumberReducer","store","configureStore","reducer","AppRouter","exact","path","component","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.cff7dce9.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const Text = styled.div`\n  font-size: ${({ size }) => size};\n  font-weight: ${({ bold }) => (bold ? \"700\" : \"400\")};\n`;\n","import React from \"react\";\nimport { Typography } from \"@material-ui/core\";\nimport * as S from \"./style\";\n\nconst Text = ({ size = \"14px\", children, bold }) => {\n  return (\n    <Typography>\n      <S.Text size={size} bold={bold}>\n        {children}\n      </S.Text>\n    </Typography>\n  );\n};\n\nexport default Text;\n","import React from \"react\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nconst Spinner = ({ size, color, thickness, variant }) => {\n  return (\n    <CircularProgress size={size} color={color} thickness={thickness} variant={variant} />\n  );\n};\n\nexport default Spinner;\n","import styled from \"styled-components\";\n\nexport const CheckBox = styled.div``;\n","import React from \"react\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport * as S from \"./style\";\n\nconst CheckBox = ({ isChecked, onChange, label, value }) => {\n  const handleChange = (checked) => {\n    onChange && onChange(value, checked);\n  };\n  return (\n    <S.CheckBox>\n      <FormControlLabel\n        control={<Checkbox checked={isChecked} onChange={(event) => handleChange(event.currentTarget.checked)} color=\"primary\" />}\n        label={label}\n      />\n    </S.CheckBox>\n  );\n};\n\nexport default CheckBox;\n","export const checkboxes = [\n    {\n      value: 'BR',\n      label: 'Brazil',\n    },\n    {\n      value: 'AU',\n      label: 'Australia',\n    },\n    {\n      value: 'CA',\n      label: 'Canada',\n    },\n    {\n      value: 'DE',\n      label: 'Germany',\n    },\n    {\n      value: 'US',\n      label: 'United States',\n    }\n  ];","export const ADD_NATION = 'ADD_NATION';\nexport const REMOVE_NATION = 'REMOVE_NATION';","export const REMOVE_FAVORITE_USER = \"REMOVE_FAVORITE_USER\";\nexport const GET_FROM_LOCAL_STORAGE = \"GET_FROM_LOCAL_STORAGE\";\nexport const SAVE_FAVORITE_USER = \"SAVE_FAVORITE_USER\";\n\nexport const CONSTANT_LOCAL_STORAGE_NAME = \"favoritesUsers\";\n","export const INCREASE_PAGE_NUM = \"INCREASE_PAGE_NUM\";\nexport const RESET_PAGES = \"RESET_PAGES\"","import styled from \"styled-components\";\n\nexport const UserList = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const List = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 35px;\n  width: 500px;\n  height: calc(100vh - 270px);\n  margin-block-start: 30px;\n  overflow-y: auto;\n`;\n\nexport const User = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 16px;\n`;\n\nexport const UserInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  width: 100%;\n  max-height: 128px;\n  gap: 2px;\n  overflow: hidden;\n`;\n\nexport const UserPicture = styled.img`\n  border-radius: 45%;\n`;\n\nexport const SpinnerWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nexport const IconButtonWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  opacity: ${({ isVisible }) => (isVisible ? 1 : 0)};\n  transition: opacity 0.2s ease-in-out;\n`;\n\nexport const Filters = styled.div`\n  display: flex;\n  justify-content: center;\n  & > * {\n    margin-inline-end: 8px;\n  }\n`;\n","import React, { useEffect, useState, useRef, useCallback } from \"react\";\nimport Text from \"components/Text\";\nimport Spinner from \"components/Spinner\";\nimport CheckBox from \"components/CheckBox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { checkboxes } from \"components/CheckBox/checkboxes\";\nimport { ADD_NATION, REMOVE_NATION } from \"redux/actions/nationsActions\";\nimport { SAVE_FAVORITE_USER, REMOVE_FAVORITE_USER , GET_FROM_LOCAL_STORAGE , CONSTANT_LOCAL_STORAGE_NAME} from \"redux/actions/favoritesActions\";\nimport { INCREASE_PAGE_NUM } from \"redux/actions/pageNumberActions\";\nimport * as S from \"./style\";\n\nconst UserList = ({ users, isLoading }) => {\n\n  // * set a dispatch to trigger a change to global state.\n  const dispatch = useDispatch();\n\n  const [hoveredUserId, setHoveredUserId] = useState();\n\n  const handleMouseEnter = (index) => {\n    setHoveredUserId(index);\n  };\n\n  const handleMouseLeave = () => {\n    setHoveredUserId();\n  };\n\n  // get current nations & favorites users from redux-state\n  const nations = useSelector((state) => {\n    return state.nations\n  });\n  const favoritesUsers = useSelector((state) => {\n    return state.favoritesUsers\n  })\n\n  // Task 1 - Nations checkbox filters\n  const handleCheckBoxChange = (checkBoxValue, isChecked) => {\n    dispatch({ type: isChecked ? ADD_NATION : REMOVE_NATION, payload: checkBoxValue })\n  }\n\n  // Task 2 - Favorite users\n  // fetching favorites from local storage for every change in users state\n  useEffect(() => {\n    const favoritesLocalStorage = JSON.parse(localStorage.getItem(CONSTANT_LOCAL_STORAGE_NAME)) || favoritesUsers;\n    favoritesLocalStorage.forEach( _ => dispatch({ type: GET_FROM_LOCAL_STORAGE, payload: favoritesLocalStorage }))\n  }, [users]);\n\n  const handleClickOnUser = (user) => {\n    dispatch({ type: favoritesUsers.includes(user) ? REMOVE_FAVORITE_USER : SAVE_FAVORITE_USER, payload: user })\n  };\n\n  // Task 3 - Infinity Scroll\n  const userRef = useRef();\n  // set logic for last user on list\n  const lastUserRef = useCallback(node => {\n    if (userRef.current) \n    {\n      // remove last reference\n      userRef.current.disconnect();\n    }\n    userRef.current = new IntersectionObserver(entries => {\n      // incase the last user show up on screen \n      if (entries[0].isIntersecting) {\n        dispatch({ type: INCREASE_PAGE_NUM });\n      }\n    })\n    if (node) userRef.current.observe(node);\n  }, []);\n\n  return (\n    <S.UserList>\n      <S.Filters>\n       {\n        checkboxes.map(checkbox => \n          <CheckBox \n          value={checkbox.value}\n          label={checkbox.label}\n          key={checkbox.value}\n          onChange={handleCheckBoxChange}\n          isChecked={nations.includes(checkbox.value)}/>)\n       }\n      </S.Filters>\n      <S.List>\n        {users.map((user, index) => {\n          return (\n            <S.User\n              ref={index + 1 === users.length ? lastUserRef : null}\n              key={index}\n              onMouseEnter={() => handleMouseEnter(index)}\n              onMouseLeave={handleMouseLeave}\n              onClick={() => {handleClickOnUser(user)}}\n            >\n              <S.UserPicture src={user?.picture.large} alt=\"\" />\n              <S.UserInfo>\n                <Text size=\"22px\" bold>\n                  {user?.name.title} {user?.name.first} {user?.name.last}\n                </Text>\n                <Text size=\"14px\">{user?.email}</Text>\n                <Text size=\"14px\">\n                  {user?.location.street.number} {user?.location.street.name}\n                </Text>\n                <Text size=\"14px\">\n                  {user?.location.city} {user?.location.country}\n                </Text>\n              </S.UserInfo>\n              <S.IconButtonWrapper isVisible={index === hoveredUserId || favoritesUsers.includes(user)}>\n                <IconButton>\n                  <FavoriteIcon color=\"error\" />\n                </IconButton>\n              </S.IconButtonWrapper>\n            </S.User>\n          );\n        })}\n        {isLoading && (\n          <S.SpinnerWrapper>\n            <Spinner color=\"primary\" size=\"45px\" thickness={6} variant=\"indeterminate\" />\n          </S.SpinnerWrapper>\n        )}\n      </S.List>\n    </S.UserList>\n  );\n};\n\nexport default UserList;\n","import styled from \"styled-components\";\n\nexport const Home = styled.div`\n  display: flex;\n  height: 100vh;\n  align-items: center;\n  justify-content: center;\n  box-sizing: border-box;\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n  padding-block-start: 100px;\n`;\n\nexport const Header = styled.div`\n  display: flex;\n`;\n\nexport const Form = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 25px;\n  max-width: 400px;\n  width: 100%;\n`;\n","import React from \"react\";\nimport Text from \"components/Text\";\nimport UserList from \"components/UserList\";\nimport { usePeopleFetch } from \"hooks\";\nimport * as S from \"./style\";\n\nconst Home = () => {\n  const { users, isLoading} = usePeopleFetch();\n\n  return (\n    <S.Home>\n      <S.Content>\n        <S.Header>\n          <Text size=\"64px\" bold>\n            PplFinder\n          </Text>\n        </S.Header>\n        <UserList users={users} isLoading={isLoading}/>\n      </S.Content>\n    </S.Home>\n  );\n};\n\nexport default Home;\n","import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {useSelector, useDispatch} from 'react-redux';\nimport {RESET_PAGES} from \"../redux/actions/pageNumberActions\";\n\nexport const usePeopleFetch = () => {\n  const [users, setUsers] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  // get access to redux states & and dispatching actions\n  const dispatch = useDispatch();\n  const nations = useSelector((state) => \n  {\n    return state.nations;\n  });\n  const pageNum = useSelector((state) => \n  {\n    return state.pageNum\n  });\n\n\n  // for every new nation filter fetch new users\n  useEffect(() => {\n    users.length = 0;\n    dispatch({ type: RESET_PAGES })\n    fetchUsers();\n  }, [nations]);\n\n  // fetch more user to current settings\n  useEffect(() => {\n    fetchUsers();\n  }, [pageNum]);\n  \n  // default fetching \n  useEffect(() => {\n    fetchUsers();\n  }, []);\n\n  \n  // fetch functions with params from redux-state\n  async function fetchUsers() {\n    setIsLoading(true);\n    const response = await axios.get(`https://randomuser.me/api`,{\n      params: {\n        results: 25,\n        page: pageNum,\n        nat: nations.length !== 0 ? nations.join() : '',\n      },\n    })\n    setIsLoading(false);\n    setUsers([...users, ...response.data.results]);\n  }\n\n  return { users, isLoading };\n};\n","import styled from \"styled-components\";\n\nexport const UserList = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const List = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 35px;\n  width: 500px;\n  height: calc(100vh - 270px);\n  margin-block-start: 30px;\n  overflow-y: auto;\n`;\n\nexport const User = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 16px;\n`;\n\nexport const UserInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  width: 100%;\n  max-height: 128px;\n  gap: 2px;\n  overflow: hidden;\n`;\n\nexport const UserPicture = styled.img`\n  border-radius: 45%;\n`;\n\nexport const SpinnerWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nexport const IconButtonWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  opacity: ${({ isVisible }) => (isVisible ? 1 : 0)};\n  transition: opacity 0.2s ease-in-out;\n`;\n\nexport const Filters = styled.div`\n  display: flex;\n  justify-content: center;\n  & > * {\n    margin-inline-end: 8px;\n  }\n`;\n","import React, { useEffect, useState } from \"react\";\nimport Text from \"components/Text\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {REMOVE_FAVORITE_USER , CONSTANT_LOCAL_STORAGE_NAME} from \"redux/actions/favoritesActions\"\nimport * as S from \"./style\";\n\nconst FavoritesList = () => {\n\n  // get from local storage  \n  const [usersToDisplay, setUsersToDisplay] = useState(JSON.parse(localStorage.getItem(CONSTANT_LOCAL_STORAGE_NAME)));\n  const dispatch = useDispatch();\n\n  // get from redux-state\n  const favoritesUsers = useSelector((state) => {\n    return state.favoritesUsers\n  });\n\n  // incase there are changes make sure i got the updated users\n  useEffect(() => {\n    setUsersToDisplay(favoritesUsers);\n  }, [usersToDisplay, favoritesUsers]);\n\n  // remove user from favorite page\n  const handleUserClick = (user) => {\n    dispatch({ type: REMOVE_FAVORITE_USER, payload: user })\n  };\n\n  return (\n    <S.UserList>\n      <S.List>\n        {usersToDisplay?.map((user, index) => {\n          return (\n            <S.User\n              key={index}\n              onClick={() => handleUserClick(user)}\n            >\n              <S.UserPicture src={user?.picture.large} alt=\"\" />\n              <S.UserInfo>\n                <Text size=\"22px\" bold>\n                  {user?.name.title} {user?.name.first} {user?.name.last}\n                </Text>\n                <Text size=\"14px\">{user?.email}</Text>\n                <Text size=\"14px\">\n                  {user?.location.street.number} {user?.location.street.name}\n                </Text>\n                <Text size=\"14px\">\n                  {user?.location.city} {user?.location.country}\n                </Text>\n              </S.UserInfo>\n              <S.IconButtonWrapper isVisible={favoritesUsers.includes(user)} >\n                <IconButton>\n                  <FavoriteIcon color=\"error\" />\n                </IconButton>\n              </S.IconButtonWrapper>\n            </S.User>\n          );\n        })}\n\n      </S.List>\n    </S.UserList>\n  );\n};\n\nexport default FavoritesList;\n","import styled from \"styled-components\";\n\nexport const Favorite = styled.div`\n  display: flex;\n  height: 100vh;\n  align-items: center;\n  justify-content: center;\n  box-sizing: border-box;\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n  padding-block-start: 100px;\n`;\n\nexport const Header = styled.div`\n  display: flex;\n`;\n\nexport const Form = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 25px;\n  max-width: 400px;\n  width: 100%;\n`;\n","import React from \"react\";\nimport Text from \"components/Text\";\nimport FavoritesList from \"components/FavoritesList\";\nimport * as S from \"./style\";\n\nconst Favorites = () => {\n  return (\n    <S.Favorite>\n      <S.Content>\n        <S.Header>\n          <Text size=\"64px\" bold>\n            My Favorites\n          </Text>\n        </S.Header>\n        <FavoritesList />\n      </S.Content>\n    </S.Favorite>\n  );\n};\n\nexport default Favorites;\n","import React from \"react\";\nimport { createMuiTheme, ThemeProvider as Provider } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nconst ThemeProvider = ({ children }) => {\n  const overrides = {\n    MuiTab: {\n      root: {\n        backgroundColor: \"#303030\",\n      },\n    },\n  };\n  const theme = React.useMemo(\n    () =>\n      createMuiTheme({\n        overrides,\n        palette: {\n          type: \"dark\",\n          primary: {\n            main: \"#84ffff\",\n          },\n          error: {\n            main: \"#f06292\",\n          },\n        },\n      }),\n    []\n  );\n\n  return (\n    <Provider theme={theme}>\n      <CssBaseline />\n      {children}\n    </Provider>\n  );\n};\n\nexport default ThemeProvider;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\n\nconst NavBar = () => {\n  const history = useHistory();\n  const routes = [\"/\",\"/favorites\"];\n  const [value, setValue] = useState(0);\n\n  const handleChange = (_e, newValue) => {\n    setValue(newValue);\n  };\n\n  useEffect(() => {\n    if (history.location.pathname != routes[value]) \n    { \n      history.push(routes[value])\n    }\n  }, [value]);\n\n  return (\n    <AppBar position=\"static\" color=\"transparent\" style={{ position: \"fixed\", top: 0 }}>\n      <Tabs\n        value={value}\n        onChange={handleChange}\n        aria-label=\"Navigation\"\n        indicatorColor=\"primary\"\n        textColor=\"primary\"\n      >\n        <Tab label=\"Home\" index={0} />\n        <Tab label=\"Favorites\" index={1} />\n      </Tabs>\n    </AppBar>\n  );\n};\n\nexport default NavBar;\n","import { ADD_NATION, REMOVE_NATION } from \"redux/actions/nationsActions\";\n\n// update the current state of nations \n// manage adding, removing to fetch the requested type of users\n\n// state set to default value [] cause we didn't get filters\nconst nationsReducer = (state = [] , action) => {\n    switch(action.type)\n    {\n        case ADD_NATION:\n            const newNations = [...state, action.payload];\n            return newNations;\n\n        case REMOVE_NATION:\n            return state.filter(item => item !== action.payload);\n \n        default:\n            return state;\n    }\n}\n\n\nexport default nationsReducer;","import {\n    REMOVE_FAVORITE_USER,\n    GET_FROM_LOCAL_STORAGE,\n    SAVE_FAVORITE_USER,\n    CONSTANT_LOCAL_STORAGE_NAME\n} from \"../actions/favoritesActions\"\n\n// update the current state of favorite users\n// manage adding, removing & passing data to different components\n\n// state set to default value [] cause we didn't get users\n\nconst favoritesReducers = (state = [], action) => {\n    const {type,payload} = action;\n    switch (type) {\n        \n        case GET_FROM_LOCAL_STORAGE:\n            return payload;\n\n        case SAVE_FAVORITE_USER:\n            if (!state.includes(payload))\n            {\n                const newUsers = state.concat(payload)\n                localStorage.setItem(CONSTANT_LOCAL_STORAGE_NAME, JSON.stringify(newUsers));\n                return newUsers;\n            }\n            else {\n                return state;\n            }\n\n        case REMOVE_FAVORITE_USER:\n            const newUsers = state.filter(favUser => favUser !== payload);\n            localStorage.setItem(CONSTANT_LOCAL_STORAGE_NAME, JSON.stringify(newUsers));\n            return newUsers;\n\n        default:\n            return state;\n    }\n\n}\nexport default favoritesReducers;","import { INCREASE_PAGE_NUM, RESET_PAGES } from \"redux/actions/pageNumberActions\";\n\n// update the current state of pages from the API\n// incase got to the last user -> increase page & fetch new users.\n\n// state set to default value of 1 for the first users page\n \nconst pageNumberReducer = (state = 1, action) => {\n    const {type} = action;\n    switch (type) {\n        // filter changed\n        case RESET_PAGES:\n            return 1;\n\n        // fetch more\n        case INCREASE_PAGE_NUM:\n            return ++state;\n        default:\n            return state;\n    }\n\n}\nexport default pageNumberReducer;","import React from \"react\";\nimport { configureStore } from '@reduxjs/toolkit'\nimport { Provider } from \"react-redux\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { Home, Favorites } from \"pages\";\nimport { ThemeProvider } from \"theme\";\nimport NavBar from \"components/NavBar\";\nimport nationsReducer from \"redux/reducers/nationsReducer\";\nimport favoritesReducers from \"redux/reducers/favoritesReducers\";\nimport pageNumberReducer from \"redux/reducers/pageNumberReducer\";\n\nconst store = configureStore({\n  reducer:{\n    nations : nationsReducer,\n    favoritesUsers : favoritesReducers,\n    pageNum : pageNumberReducer \n  }\n})\n\nconst AppRouter = () => {\n  return (\n    <ThemeProvider>\n      <Provider store={store}>\n        <Router>\n          <NavBar />\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route exact path=\"/favorites\" component={Favorites} />\n          </Switch>\n        </Router>\n      </Provider>\n    </ThemeProvider>\n  );\n};\n\nexport default AppRouter;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport AppRouter from \"AppRouter\";\n\nReactDOM.render(<AppRouter />, document.querySelector(\"#root\"));\n"],"sourceRoot":""}